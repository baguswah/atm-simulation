<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.11.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.mitrais.training</groupId>
    <artifactId>atm-simulation</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>ATM Simulation</name>
    <description>ATM simulation case study</description>
    <organization>
        <name>Mitrais</name>
    </organization>
    <scm>
        <url>https://github.com/baguswah/atm-simulation</url>
        <connection>scm:git:https://github.com/baguswah/atm-simulation.git</connection>
        <developerConnection>scm:git:https://github.com/baguswah/atm-simulation.git</developerConnection>
        <tag>simulation</tag>
	</scm>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>

        <postgresql.version>42.3.3</postgresql.version>
        <db.init.skip>true</db.init.skip>
        <db.driver.classname>org.postgresql.Driver</db.driver.classname>
        <db.connection.url>jdbc:postgresql://localhost:5435</db.connection.url>
        <db.name>atmsimulation</db.name>
        <db.username>postgres</db.username>
        <db.password>password</db.password>
        <db.contexts>local</db.contexts>
    </properties>

    <profiles>
        <profile>
            <id>init</id>
            <properties>
                <db.init.skip>false</db.init.skip>
                <db.contexts>setup,sample</db.contexts>
            </properties>
        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>process-liquibase-files</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <useDefaultDelimiters>false</useDefaultDelimiters>
                            <delimiters>
                                <delimiter>${*}</delimiter>
                            </delimiters>
                            <encoding>${project.build.sourceEncoding}</encoding>
                            <outputDirectory>${basedir}/target/liquibase</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/src/db</directory>
                                    <filtering>true</filtering>
                                    <includes>
                                        <include>**/*.xml</include>
                                        <include>**/*.csv</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sql-maven-plugin</artifactId>
                <version>1.5</version>
                <dependencies>
                    <dependency>
                        <groupId>org.postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>${postgresql.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <driver>${db.driver.classname}</driver>
                    <url>${db.connection.url}/postgres</url>
                    <username>${db.username}</username>
                    <password>${db.password}</password>
                    <skip>${db.init.skip}</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>setup-database</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <autocommit>true</autocommit>
                            <sqlCommand>
                                DROP DATABASE IF EXISTS ${db.name};
                                CREATE DATABASE ${db.name} ENCODING 'UTF8';
                            </sqlCommand>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-maven-plugin</artifactId>
                <version>3.8.4</version>
                <configuration>
                    <changeLogFile>target/liquibase/changelog/db.changelog.xml</changeLogFile>
                    <driver>${db.driver.classname}</driver>
                    <url>${db.connection.url}/${db.name}</url>
                    <username>${db.username}</username>
                    <password>${db.password}</password>
                    <promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
                    <contexts>${db.contexts}</contexts>
                    <skip>${db.init.skip}</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>setup-database</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>update</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgresql.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
